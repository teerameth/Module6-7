from mpl_toolkits import mplot3d
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import axes3d
fig = plt.figure()
ax = plt.axes(projection="3d")
points = [(62.5, 333.0, 400), (62.5, 333.0, 107.27272727272727), (199.0, 282.0, 107.27272727272727), (200.0, 333.0, 107.27272727272727), (333.5, 333.5, 107.27272727272727), (335.0, 273.5, 105.45454545454545), (335.0, 332.0, 105.45454545454545), (335.5, 128.0, 109.0909090909091), (335.5, 273.0, 105.45454545454545), (62.0, 250.5, 175.67567567567568), (63.5, 164.0, 175.67567567567568), (76.0, 128.0, 172.97297297297297), (168.0, 59.5, 200), (265.0, 67.0, 200), (199.5, 212.5, 200), (199.5, 212.5, 400), (62.5, 333.0, 400), (62.5, 333.0, 175.67567567567568), (62.0, 250.5, 175.67567567567568), (63.5, 164.0, 175.67567567567568), (76.0, 128.0, 172.97297297297297), (168.0, 59.5, 200), (265.0, 67.0, 200), (199.0, 282.0, 107.27272727272727), (200.0, 333.0, 107.27272727272727), (333.5, 333.5, 107.27272727272727), (335.0, 273.5, 105.45454545454545), (335.0, 332.0, 105.45454545454545), (335.5, 128.0, 109.0909090909091), (335.5, 273.0, 105.45454545454545), (199.5, 212.5, 105.45454545454545), (199.5, 212.5, 400), (62.5, 333.0, 400), (62.5, 333.0, 107.27272727272727), (199.0, 282.0, 107.27272727272727), (200.0, 333.0, 107.27272727272727), (333.5, 333.5, 107.27272727272727), (335.0, 273.5, 105.45454545454545), (335.0, 332.0, 105.45454545454545), (335.5, 128.0, 109.0909090909091), (335.5, 273.0, 105.45454545454545), (265.0, 67.0, 200), (168.0, 59.5, 200), (76.0, 128.0, 172.97297297297297), (63.5, 164.0, 175.67567567567568), (62.0, 250.5, 175.67567567567568), (199.5, 212.5, 175.67567567567568), (199.5, 212.5, 400), (62.5, 333.0, 400), (62.5, 333.0, 200), (265.0, 67.0, 200), (168.0, 59.5, 200), (76.0, 128.0, 172.97297297297297), (63.5, 164.0, 175.67567567567568), (62.0, 250.5, 175.67567567567568), (199.0, 282.0, 107.27272727272727), (200.0, 333.0, 107.27272727272727), (333.5, 333.5, 107.27272727272727), (335.0, 273.5, 105.45454545454545), (335.0, 332.0, 105.45454545454545), (335.5, 128.0, 109.0909090909091), (335.5, 273.0, 105.45454545454545), (199.5, 212.5, 105.45454545454545), (199.5, 212.5, 400), (62.5, 333.0, 400), (62.5, 333.0, 105.45454545454545), (335.5, 273.0, 105.45454545454545), (335.5, 128.0, 109.0909090909091), (335.0, 332.0, 105.45454545454545), (335.0, 273.5, 105.45454545454545), (333.5, 333.5, 107.27272727272727), (200.0, 333.0, 107.27272727272727), (199.0, 282.0, 107.27272727272727), (62.0, 250.5, 175.67567567567568), (63.5, 164.0, 175.67567567567568), (76.0, 128.0, 172.97297297297297), (168.0, 59.5, 200), (265.0, 67.0, 200), (199.5, 212.5, 200), (199.5, 212.5, 400), (62.5, 333.0, 400), (62.5, 333.0, 175.67567567567568), (62.0, 250.5, 175.67567567567568), (63.5, 164.0, 175.67567567567568), (76.0, 128.0, 172.97297297297297), (168.0, 59.5, 200), (265.0, 67.0, 200), (335.5, 273.0, 105.45454545454545), (335.5, 128.0, 109.0909090909091), (335.0, 332.0, 105.45454545454545), (335.0, 273.5, 105.45454545454545), (333.5, 333.5, 107.27272727272727), (200.0, 333.0, 107.27272727272727), (199.0, 282.0, 107.27272727272727), (199.5, 212.5, 107.27272727272727), (199.5, 212.5, 400), (62.5, 333.0, 400), (62.5, 333.0, 105.45454545454545), (335.5, 273.0, 105.45454545454545), (335.5, 128.0, 109.0909090909091), (335.0, 332.0, 105.45454545454545), (335.0, 273.5, 105.45454545454545), (333.5, 333.5, 107.27272727272727), (200.0, 333.0, 107.27272727272727), (199.0, 282.0, 107.27272727272727), (265.0, 67.0, 200), (168.0, 59.5, 200), (76.0, 128.0, 172.97297297297297), (63.5, 164.0, 175.67567567567568), (62.0, 250.5, 175.67567567567568), (199.5, 212.5, 175.67567567567568), (199.5, 212.5, 400), (62.5, 333.0, 400), (62.5, 333.0, 200), (265.0, 67.0, 200), (168.0, 59.5, 200), (76.0, 128.0, 172.97297297297297), (63.5, 164.0, 175.67567567567568), (62.0, 250.5, 175.67567567567568), (335.5, 273.0, 105.45454545454545), (335.5, 128.0, 109.0909090909091), (335.0, 332.0, 105.45454545454545), (335.0, 273.5, 105.45454545454545), (333.5, 333.5, 107.27272727272727), (200.0, 333.0, 107.27272727272727), (199.0, 282.0, 107.27272727272727), (199.5, 212.5, 107.27272727272727), (199.5, 212.5, 400)]
X, Y, Z = [], [] ,[]
for point in points:
    (x, y, z) = point
    X.append(x)
    Y.append(y)
    Z.append(z)
ax.scatter3D(X, Y, Z,c=Z, cmap='Blues')
# ax.plot(X, Y, Z, label='parametric curve')
ax.legend()
plt.show()
